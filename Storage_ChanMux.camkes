/* Copyright (C) 2020, HENSOLDT Cyber GmbH */

/**
 * @file
 * @brief   Driver for the generic storage
 *
 * This component will communicate with the chanmux for accessing the underlying
 * storage.
 */

#pragma once

/** @cond SKIP_IMPORTS */
import <std_connector.camkes>;
import <if_OS_Storage.camkes>;
/** @endcond */

/**
 * @hideinitializer
 */

 //------------------------------------------------------------------------------

#define Storage_ChanMux_COMPONENT_DEFINE( \
    _name_) \
    \
    component _name_ { \
        provides if_OS_Storage  storage_rpc; \
        dataport Buf            storage_port; \
        \
        ChanMux_CLIENT_DECLARE_INTERFACE(chanMux) \
        ChanMux_CLIENT_DECLARE_CHANNEL_CONNECTOR(chanMux, chan) \
    }

//------------------------------------------------------------------------------

#define Storage_ChanMux_INSTANCE_CONNECT_CLIENT( \
    _inst_, \
    _rpc_, \
    _port_) \
    \
    connection  seL4RPCCall \
        configServer_chanMux_storage( \
            from    _rpc_, \
            to      _inst_.storage_rpc \
        ); \
    connection  seL4SharedData \
        configServer_chanMux_storage_port( \
            from    _port_,\
            to      _inst_.storage_port \
        );
